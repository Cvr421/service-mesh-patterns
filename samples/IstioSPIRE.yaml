#Pre-requisite: A Kubernetes cluster 
#Description: This Design installs Spire with the default configuration
name: SPIRE-ready Istio
services:
  0b9a899c-4a9e-4420-90df-51f74c7fb243:
    name: spire-server-trust-role
    type: ClusterRole
    model: kubernetes
    namespace: default
    settings:
      rules:
      - api Groups:
        - authentication.k8s.io
        resources:
        - tokenreviews
        verbs:
        - create
      - apiGroups:
        - ""
        resources:
        - configmaps
        verbs:
        - patch
        - get
        - list
  2cd28786-914a-48a3-b64e-7ad0c637b9f0:
    name: trust-bundle
    type: ConfigMap
    model: kubernetes
    namespace: spire
  3afb36aa-8033-440f-870a-ed82f98f9d46:
    name: spire-agent-cluster-role
    type: ClusterRole
    model: kubernetes
    namespace: default
    settings:
      rules:
      - api Groups:
        - ""
        resources:
        - pods
        - nodes
        - nodes/proxy
        verbs:
        - get
  7fe70365-e1cb-4605-8ac3-83fa07a8bff7:
    name: k8s-workload-registrar
    type: ConfigMap
    model: kubernetes
    namespace: spire
    settings:
      data:
        k8s-workload-registrar.conf: |-
          trust_domain = "example.org"
          server_socket_path = "/run/spire/sockets/server.sock"
          cluster = "demo-cluster"
          mode = "crd"
          metrics_bind_addr = "0"
  53b6ff6a-9b1f-4ab3-9a3e-e1677685f255:
    name: spire-server
    type: StatefulSet
    model: kubernetes
    namespace: spire
    labels:
      app: spire-server
    settings:
      spec:
        replicas: 1
        selector:
          match Labels:
            app: spire-server
        serviceName: spire-server
        template:
          metadata:
            labels:
              app: spire-server
            namespace: spire
          spec:
            containers:
            - args:
              - -config
              - /run/spire/config/server.conf
              image: gcr.io/spiffe-io/spire-server:1.2.0
              liveness Probe:
                failure Threshold: 2
                http Get:
                  path: /live
                  port: 8080
                initial Delay Seconds: 15
                period Seconds: 60
                timeout Seconds: 3
              name: spire-server
              ports:
              - container Port: 8081
              readiness Probe:
                http Get:
                  path: /ready
                  port: 8080
                initial Delay Seconds: 5
                period Seconds: 5
              volume Mounts:
              - mount Path: /run/spire/config
                name: spire-config
                read Only: true
              - mount Path: /run/spire/data
                name: spire-data
                read Only: false
              - mount Path: /run/spire/sockets
                name: spire-registration-socket
                read Only: false
            - args:
              - -config
              - /run/spire/config/k8s-workload-registrar.conf
              image: gcr.io/spiffe-io/k8s-workload-registrar:1.2.0
              name: k8s-workload-registrar
              ports:
              - container Port: 9443
                name: webhook
                protocol: TCP
              volume Mounts:
              - mount Path: /run/spire/config
                name: k8s-workload-registrar-config
                read Only: true
              - mount Path: /run/spire/sockets
                name: spire-registration-socket
                read Only: true
            service Account Name: spire-server
            share Process Namespace: true
            volumes:
            - config Map:
                name: spire-server
              name: spire-config
            - config Map:
                name: k8s-workload-registrar
              name: k8s-workload-registrar-config
            - host Path:
                path: /run/spire/server-sockets
                type: DirectoryOrCreate
              name: spire-registration-socket
        volume Claim Templates:
        - metadata:
            name: spire-data
            namespace: spire
          spec:
            access Modes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
  62cf6f87-afc6-4897-96cc-836107582ac8:
    name: spire-server
    type: Service
    model: kubernetes
    namespace: spire
    settings:
      spec:
        ports:
        - name: grpc
          port: 8081
          protocol: TCP
          target Port: 8081
        selector:
          app: spire-server
        type: NodePort
  922d4812-9346-41c9-85c9-d65f58eebf94:
    name: spire-agent
    type: ConfigMap
    model: kubernetes
    namespace: spire
    settings:
      data:
        agent.conf: |-
          agent {
            data_dir = "/run/spire"
            log_level = "DEBUG"
            server_address = "spire-server"
            server_port = "8081"
            socket_path = "/run/secrets/workload-spiffe-uds/socket"
            trust_bundle_path = "/run/spire/bundle/root-cert.pem"
            trust_domain = "example.org"
          }
          plugins {
            NodeAttestor "k8s_psat" {
              plugin_data {
                # NOTE: Change this to your cluster name
                cluster = "demo-cluster"
              }
            }
            KeyManager "memory" {
              plugin_data {
              }
            }
            WorkloadAttestor "k8s" {
              plugin_data {
                # Defaults to the secure kubelet port by default.
                # Minikube does not have a cert in the cluster CA bundle that
                # can authenticate the kubelet cert, so skip validation.
                skip_kubelet_verification = true
              }
            }
            WorkloadAttestor "unix" {
                plugin_data {
                }
            }
          }
          health_checks {
            listener_enabled = true
            bind_address = "0.0.0.0"
            bind_port = "8080"
            live_path = "/live"
            ready_path = "/ready"
          }
  68854dac-bbe5-42e6-ac17-06413a12829e:
    name: spire-agent-cluster-role-binding
    type: ClusterRoleBinding
    model: kubernetes
    namespace: default
    settings:
      role Ref:
        api Group: rbac.authorization.k8s.io
        kind: ClusterRole
        name: spire-agent-cluster-role
      subjects:
      - kind: ServiceAccount
        name: spire-agent
        namespace: spire
  478877e3-2986-4bcb-9d73-ecfeaef7a273:
    name: spire-server
    type: ServiceAccount
    model: kubernetes
    namespace: spire
  652936bd-08c1-4ddb-812b-a376f00a483a:
    name: k8s-workload-registrar-role-binding
    type: ClusterRoleBinding
    model: kubernetes
    namespace: default
    settings:
      role Ref:
        api Group: rbac.authorization.k8s.io
        kind: ClusterRole
        name: k8s-workload-registrar-role
      subjects:
      - kind: ServiceAccount
        name: spire-server
        namespace: spire
  672640a6-2d37-433d-bd7b-f605da716c95:
    name: spiffeids.spiffeid.spiffe.io
    type: CustomResourceDefinition
    model: kubernetes
    namespace: default
    annotations:
      controller-gen.kubebuilder.io/version: v0.2.4
    settings:
      spec:
        group: spiffeid.spiffe.io
        names:
          kind: SpiffeID
          list Kind: SpiffeIDList
          plural: spiffeids
          singular: spiffeid
        scope: Namespaced
        versions:
        - name: v1beta1
          schema:
            openAPIV3Schema:
              description: SpiffeID is the Schema for the spiffeid API
              properties:
                api Version:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the
                    latest internal value, and may reject unrecognized values. More
                    info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                  type: string
                kind:
                  description: 'Kind is a string value representing the REST resource
                    this object represents. Servers may infer this from the endpoint
                    the client submits requests to. Cannot be updated. In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                metadata:
                  type: object
                spec:
                  description: SpiffeIDSpec defines the desired state of SpiffeID
                  properties:
                    dns Names:
                      items:
                        type: string
                      type: array
                    downstream:
                      type: boolean
                    federates With:
                      items:
                        type: string
                      type: array
                    parent Id:
                      type: string
                    selector:
                      properties:
                        agent_node_uid:
                          description: UID of the node
                          type: string
                        arbitrary:
                          description: Arbitrary selectors
                          items:
                            type: string
                          type: array
                        cluster:
                          description: The k8s_psat cluster name
                          type: string
                        container Image:
                          description: Container image to match for this spiffe ID
                          type: string
                        container Name:
                          description: Container name to match for this spiffe ID
                          type: string
                        namespace:
                          description: Namespace to match for this spiffe ID
                          type: string
                        node Name:
                          description: Node name to match for this spiffe ID
                          type: string
                        pod Label:
                          additional Properties:
                            type: string
                          description: Pod label name/value to match for this spiffe
                            ID
                          type: object
                        pod Name:
                          description: Pod name to match for this spiffe ID
                          type: string
                        pod Uid:
                          description: Pod UID to match for this spiffe ID
                          type: string
                        service Account:
                          description: ServiceAccount to match for this spiffe ID
                          type: string
                      type: object
                    spiffe Id:
                      type: string
                  required:
                  - parentId
                  - selector
                  - spiffeId
                  type: object
                status:
                  description: SpiffeIDStatus defines the observed state of SpiffeID
                  properties:
                    entryId:
                      description: 'INSERT ADDITIONAL STATUS FIELD - define observed
                        state of cluster Important: Run "make" to regenerate code
                        after modifying this file'
                      type: string
                  type: object
              type: object
          served: true
          storage: true
          subresources:
            status: {}
  ae8f9d0d-f7ce-4f70-bb15-09aaa330b54c:
    name: k8s-workload-registrar-role
    type: ClusterRole
    model: kubernetes
    namespace: default
    settings:
      rules:
      - api Groups:
        - authentication.k8s.io
        resources:
        - tokenreviews
        verbs:
        - get
        - create
      - api Groups:
        - ""
        resources:
        - endpoints
        - nodes
        - pods
        verbs:
        - get
        - list
        - watch
      - api Groups:
        - spiffeid.spiffe.io
        resources:
        - spiffeids
        verbs:
        - create
        - delete
        - get
        - list
        - patch
        - update
        - watch
      - api Groups:
        - spiffeid.spiffe.io
        resources:
        - spiffeids/status
        verbs:
        - get
        - patch
        - update
      - api Groups:
        - admissionregistration.k8s.io
        resources:
        - validatingwebhookconfigurations
        verbs:
        - get
        - list
        - update
        - watch
  b8822f39-b098-4447-b346-58f62c0d41e9:
    name: spire-server
    type: ConfigMap
    model: kubernetes
    namespace: spire
    settings:
      data:
        server.conf: |-
          server {
            bind_address = "0.0.0.0"
            bind_port = "8081"
            socket_path = "/run/spire/sockets/server.sock"
            trust_domain = "example.org"
            data_dir = "/run/spire/data"
            log_level = "DEBUG"
            ca_key_type = "rsa-2048"
            default_svid_ttl = "1h"
            ca_subject = {
              country = ["US"],
              organization = ["SPIFFE"],
              common_name = "",
            }
          }
          plugins {
            DataStore "sql" {
              plugin_data {
                database_type = "sqlite3"
                connection_string = "/run/spire/data/datastore.sqlite3"
              }
            }
            NodeAttestor "k8s_psat" {
              plugin_data {
                clusters = {
                  # NOTE: Change this to your cluster name
                  "demo-cluster" = {
                    use_token_review_api_validation = true
                    service_account_allow_list = ["spire:spire-agent"]
                  }
                }
              }
            }
            KeyManager "disk" {
              plugin_data {
                keys_path = "/run/spire/data/keys.json"
              }
            }
            Notifier "k8sbundle" {
              plugin_data {
                namespace = "spire"
                config_map = "trust-bundle"
                config_map_key = "root-cert.pem"
              }
            }
          }
          health_checks {
            listener_enabled = true
            bind_address = "0.0.0.0"
            bind_port = "8080"
            live_path = "/live"
            ready_path = "/ready"
          }
  c4c04d51-e7a4-444c-9f04-1c76c1fee18a:
    name: spire-server-trust-role-binding
    type: ClusterRoleBinding
    model: kubernetes
    namespace: default
    settings:
      role Ref:
        api Group: rbac.authorization.k8s.io
        kind: ClusterRole
        name: spire-server-trust-role
      subjects:
      - kind: ServiceAccount
        name: spire-server
        namespace: spire
  ca0a3ad3-5310-4e98-b44e-1e0b9f147585:
    name: spire-agent
    type: ServiceAccount
    model: kubernetes
    namespace: spire
  d024068b-e088-4414-bbba-17610e6f5e6b:
    name: spire-agent
    type: DaemonSet
    model: kubernetes
    namespace: spire
    labels:
      app: spire-agent
    settings:
      spec:
        selector:
          match Labels:
            app: spire-agent
        template:
          metadata:
            labels:
              app: spire-agent
            namespace: spire
          spec:
            containers:
            - args:
              - -config
              - /run/spire/config/agent.conf
              image: gcr.io/spiffe-io/spire-agent:1.2.0
              liveness Probe:
                failure Threshold: 2
                http Get:
                  path: /live
                  port: 8080
                initial Delay Seconds: 15
                period Seconds: 60
                timeout Seconds: 3
              name: spire-agent
              readiness Probe:
                http Get:
                  path: /ready
                  port: 8080
                initial Delay Seconds: 5
                periodSeconds: 5
              volume Mounts:
              - mount Path: /run/spire/config
                name: spire-config
                read Only: true
              - mount Path: /run/spire/bundle
                name: spire-bundle
              - mount Path: /run/secrets/workload-spiffe-uds
                name: spire-agent-socket-dir
              - mount Path: /var/run/secrets/tokens
                name: spire-token
            - args:
              - -node-id
              - CSI_NODE
              - -workload-api-socket-dir
              - /spire-agent-socket
              - -csi-socket-path
              - /spiffe-csi/csi.sock
              image: ghcr.io/spiffe/spiffe-csi-driver:0.1.0
              image Pull Policy: IfNotPresent
              name: spiffe-csi-driver
              security Context:
                privileged: true
              volume Mounts:
              - mount Path: /spire-agent-socket
                name: spire-agent-socket-dir
                read Only: true
              - mount Path: /spiffe-csi
                name: spiffe-csi-socket-dir
              - mount Path: /var/lib/kubelet/pods
                mount Propagation: Bidirectional
                name: mountpoint-dir
            - args:
              - -csi-address
              - /spiffe-csi/csi.sock
              - -kubelet-registration-path
              - /var/lib/kubelet/plugins/csi.spiffe.io/csi.sock
              image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.4.0
              image Pull Policy: IfNotPresent
              name: node-driver-registrar
              volume Mounts:
              - mount Path: /spiffe-csi
                name: spiffe-csi-socket-dir
              - mount Path: /registration
                name: kubelet-plugin-registration-dir
            dns Policy: ClusterFirstWithHostNet
            host Network: true
            host PID: true
            init Containers:
            - args:
              - -t
              - "30"
              - spire-server:8081
              image: gcr.io/spiffe-io/wait-for-it
              name: init
            service Account Name: spire-agent
            volumes:
            - config Map:
                name: spire-agent
              name: spire-config
            - config Map:
                name: trust-bundle
              name: spire-bundle
            - name: spire-token
              projected:
                sources:
                - service Account Token:
                    audience: spire-server
                    expiration Seconds: 7200
                    path: spire-agent
            - host Path:
                path: /run/spire/socket-dir
                type: DirectoryOrCreate
              name: spire-agent-socket-dir
            - host Path:
                path: /var/lib/kubelet/plugins/csi.spiffe.io
                type: DirectoryOrCreate
              name: spiffe-csi-socket-dir
            - host Path:
                path: /var/lib/kubelet/pods
                type: Directory
              name: mountpoint-dir
            - host Path:
                path: /var/lib/kubelet/plugins_registry
                type: Directory
              name: kubelet-plugin-registration-dir
  dacd7e02-5083-4c6b-aa90-f4a2c489a28a:
    name: spire
    type: Namespace
    model: kubernetes
    namespace: default
  eefb977e-8422-4ed0-b9a6-6a9b985916a5:
    name: csi.spiffe.io
    type: CSIDriver
    model: kubernetes
    namespace: default
    settings:
      spec:
        attach Required: false
        fs Group Policy: None
        pod Info On Mount: true
        volume Lifecycle Modes:
        - Ephemeral